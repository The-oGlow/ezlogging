name: code-analysis

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - '.github/workflows/**'
      - '.run/**'
      - '.idea/**'
      - 'site/**'

env:
  # PHP Configuration
  XDEBUG_MODE: off
  #coverage
  PHPUNIT_LOG: phpunit-test.log

  # Github Additional Configuration
  GITHUB_REPO_NAME: ${{ github.event.repository.name }}
  GITHUB_ACTOR: ${{ github.actor }}
  GITHUB_PROJECT_DIR: ${{ github.workspace }}
  GITHUB_TARGET_DIR: ${{ github.workspace }}/target
  GITHUB_BRANCH_NAME: ${{ github.ref_name }}
  GITHUB_UPLOAD_DIR: ${{ github.workspace }}/target/staging
  GITHUB_UPLOAD_NAME: ${{ github.event.repository.name }}.zip
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Sonarcloud Configuration
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GH}}
  SONAR_CACHE_DIR: "${HOME}/.sonar/cache"
  SONAR_HOST_URL: "https://sonarcloud.io"
  SONAR_BRANCH: ${{ github.ref_name }}

  # Composer Configuration
  COMPOSER_VENDOR_DIR: ${{ github.workspace }}/vendor

  # Codacy Configuration
  CODACY_API_TOKEN: ${{ secrets.CODACY_TOKEN_GH }}

  # Coveralls Configuration
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

jobs:
  analysis:
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        php: ["7.4"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: set current timestamp
        id: TS_NOW
        run: echo "TS_NOW=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: echo current timestamp
        run: echo ${TS_NOW} - ${{ env.TS_NOV }} - ${{ steps.TS_NOW.outputs.TS_NOW }}

      - name: checkout
        uses: actions/checkout@v4.3.0
        with:
          fetch-depth: 0

      - name: setup PHP
        id: setup-php
        uses: shivammathur/setup-php@2.35.3
        with:
          php-version: '${{ matrix.php }}'
          extensions: none,:opcache,xdebug-3.1.6
          # extensions: bz2,curl,fileinfo,gd,intl,mbstring,exif,openssl,soap,sockets,xsl
          coverage: xdebug
          # tools: phpunit:9
          #ini-values: zend.enable_gc=0,memory_limit=512M
        env:
          fail-fast: true
          #phpts: nts

      - name: print PHP version
        run: php -i

      - name: print PHP module
        run: php -m

      - name: identify composer cache
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: cache composer packages
        uses: actions/cache@v4.2.3
        id: cache
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.os }}-${{env.GITHUB_REPO_NAME}}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{env.GITHUB_REPO_NAME}}-

      - name: install dependencies
        run: composer update --no-ansi --no-interaction --no-progress

      - name: execute tests
        run: php vendor/bin/phpunit -v --debug>${{ env.PHPUNIT_LOG }}

      - name: show test log
        run: test -f ${{ env.PHPUNIT_LOG }} && cat ${{ env.PHPUNIT_LOG }}

      # not using automatic from sonarcloud
      - name: sonarcloud
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      # not using automatic from codacy
      - name: codacy scan
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          api-token: ${{ env.CODACY_API_TOKEN }}
          coverage-reports: target/analysis/clover/coverage.xml

      - name: coveralls scan
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          file: target/analysis/clover/coverage.xml
          format: clover